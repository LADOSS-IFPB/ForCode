package br.edu.web.forcode.service;

import javax.annotation.security.PermitAll;
import javax.annotation.security.RolesAllowed;
import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Response;

import br.edu.commons.forcode.contests.UserContest;
import br.edu.commons.forcode.entities.Admin;
import br.edu.commons.forcode.entities.Contestant;
import br.edu.commons.forcode.entities.Manager;
import br.edu.commons.forcode.entities.User;

public interface ForCodeService {
	
	
	@POST
	@RolesAllowed(value = {"Admin"})
	@Path("/user/createadmin")
	@Consumes("application/json")
	@Produces("application/json")
	public Response insertAdmin(Admin admin);
	
	@POST
	@RolesAllowed(value = {"Admin"})
	@Path("/user/updateadmin")
	@Consumes("application/json")
	@Produces("application/json")
	public Response updateAdmin(Admin admin);
	
	@POST
	@RolesAllowed(value = {"Admin"})
	@Path("/user/createmanager")
	@Consumes("application/json")
	@Produces("application/json")
	public Response createManager(Manager manager);
	
	@POST
	@RolesAllowed(value = {"Manager"})
	@Path("/user/updatemanager")
	@Consumes("application/json")
	@Produces("application/json")
	public Response updateManager(Manager manager);

	@PermitAll
	@POST
	@Path("/user/createcontestant")
	@Consumes("application/json")
	@Produces("application/json")
	public Response createContestant(Contestant contestant);
	
	@POST
	@RolesAllowed(value = {"Contestant"})
	@Path("/user/updatecontestant")
	@Consumes("application/json")
	@Produces("application/json")
	public Response updateContestant(Contestant contestant);
	
	@PermitAll
	@POST
	@Path("/user/login")
	@Consumes("application/json")
	@Produces("application/json")
	public Response login(@QueryParam("user") String username, String password);
	
	@PermitAll
	@POST
	@Path("/user/searchuser")
	@Consumes("application/json")
	@Produces("application/json")
	public Response seachUser(String username);
	
	@POST
	@RolesAllowed(value = {"Admin","Manager","Contestant"})
	@Path("/user/logout")
	@Consumes("application/json")
	@Produces("application/json")
	public Response logout(User user);
	
	@POST
	@RolesAllowed(value={"Manager"})
	@Path("/user/invalidatecontestant")
	@Consumes("application/json")
	@Produces("application/json")
	public Response invalidateContestant(UserContest contestant);
	
}
